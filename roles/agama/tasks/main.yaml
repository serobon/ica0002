- name: Create directory '/opt/agama'
  ansible.builtin.file:
    path: /opt/agama
    state: directory

- name: Install 'agama.py' to '/opt/agama'
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/hudolejev/agama/master/agama.py
    dest: /opt/agama/agama.py

- name: Download agama dockerfile
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/hudolejev/agama/master/Dockerfile
    dest: /opt/agama/Dockerfile
    mode: '0755'

- name: Build agama docker image
  community.docker.docker_image:
    name: agama
    source: build
    build:
      path: /opt/agama
    
- name: Start agama data containers on VM1
  community.docker.docker_container:
    name: vm1-agama-{{ item }}
    image: agama
    volumes: /opt/agama:/opt/agama
    env: AGAMA_DATABASE_URI=mysql+pymysql://{{ mysql_user }}:{{ mysql_password }}@db{{ mysql_host | replace ('serobon','') }}/{{ mysql_database }}
    ports: 
      - "{{ agama_port + item - 1}}:8000"
    state: started
    restart_policy: always
  loop: "{{ range(1, container_amount + 1) | list }}"
  when: "inventory_hostname == 'serobon-1'"


- name: Start agama data containers on VM2
  community.docker.docker_container:
    name: vm2-agama-{{ item }}
    image: agama
    volumes: /opt/agama:/opt/agama
    env: AGAMA_DATABASE_URI=mysql+pymysql://{{ mysql_user }}:{{ mysql_password }}@db{{ mysql_host | replace ('serobon','') }}/{{ mysql_database }}
    ports: 
      - "{{ agama_port + item - 1}}:8000"
    state: started
    restart_policy: always
  loop: "{{ range(1, container_amount + 1) | list }}"
  when: "inventory_hostname == 'serobon-2'"