- name: Install mysql-server
  ansible.builtin.apt:
    name: mysql-server
    state: present

- name: Install prometheus-mysqld-exporter
  ansible.builtin.apt:
    name: prometheus-mysqld-exporter
    state: present

- name: Create config override
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify: Restart mysql

- name: Install python3-pymysql
  ansible.builtin.apt:
    name: python3-pymysql
    state: present

- name: Make cron backup sql dump for MySQL
  ansible.builtin.template:
    src: mysql-backup.conf.j2
    dest: /etc/cron.d/mysql-backup
    owner: root
  notify: Restart mysql

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    password: "{{ mysql_password }}"
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"

- name: MySQL exporter user
  community.mysql.mysql_user:
    name: "{{ exporter_user }}"
    password: "{{ exporter_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true
  notify: Restart mysql exporter

- name: Make /home/backup/mysql directory owned by backup
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    mode: '0755'

- name: MySQL backup user
  community.mysql.mysql_user:
    name: "{{ backup_user }}"
    password: "{{ backup_password }}"
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: MySQL replication user
  community.mysql.mysql_user:
    name: "{{ replication_user }}"
    password: "{{ replication_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Add mysql exporter config
  ansible.builtin.template:
    src: .my.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
    owner: prometheus
    mode: '0400'
  notify:
    - Restart mysql exporter

- name: Add mysql backup config
  ansible.builtin.template:
    src: backup.my.cnf.j2
    dest: /home/backup/.my.cnf
    owner: backup
    mode: '0600'
  notify: Restart mysql

- name: Set dynamic mysql parameters
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset mysql source
    - Reset mysql replica

- name: Start and enable MySQL service
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: yes

- name: Replace default .my.cnf
  ansible.builtin.template:
    src: .my.cnf.j2
    dest: /var/lib/prometheus/.my.cnf
    owner: prometheus
    mode: '0400'
  no_log: true
  notify: Restart mysql exporter

- name: MySQL exporter service
  ansible.builtin.service:
    name: prometheus-mysqld-exporter
    state: started
    enabled: true